// FIXME: Issue with solver var not being added to context during some interpretation step

// Option encoding
// None    ~  nil
// Some v  ~  cons v nil

fun last (fuel [Nat]) = {
  fixD(
    // last_ [List => Option[Top]] =>
    last_ [List => {[List] list_match choose[List] { case nil => nil  case cons v unused => cons (choose[Top]) nil } }] =>
      fun of (xs [List]) = {
        (list_match xs {
          case nil => nil  // None
          case cons x ys =>
            list_match ys {
              case nil => cons x nil  // Some x
              case cons y zs => last_ ys
            }
        })
      },
      // fun of (xs [List]) = { last_ xs }, // FIXME: (Also triggers above-mentioned issue)
    fun of (xs [List]) = { nil } // None
  )(fuel)
}

// val x [List] = last 2 (cons 0 nil);
// val x [{[List] cons 0 nil}] = last 2 (cons 0 nil);

()
